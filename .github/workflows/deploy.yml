name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: true

jobs:
  deploy:
    name: Pull latest image and update service
    runs-on: ubuntu-latest
    environment:
      name: zzaoclub
    env:
      # 你可以改成服务器上希望存放 compose 的路径
      REMOTE_APP_DIR: /root/server/hono-base
    steps:
      - name: Checkout repository (for uploading compose file)
        uses: actions/checkout@v4

      - name: Ensure remote directory exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            mkdir -p "${{ env.REMOTE_APP_DIR }}"

      - name: Upload docker-compose.prod.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "${{ env.REMOTE_APP_DIR }}/"
          overwrite: true

      - name: Deploy using Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            cd "${{ env.REMOTE_APP_DIR }}"

            # Prefer new plugin 'docker compose', fallback to legacy 'docker-compose'
            if docker compose version >/dev/null 2>&1; then
              DC="docker compose"
            else
              DC="docker-compose"
            fi

            # Load server-side env for compose variable interpolation (e.g., APP_PORT)
            ENV_FILE="/root/envs/hono/.env"
            if [ -f "$ENV_FILE" ]; then
              set -a
              . "$ENV_FILE"
              set +a
            fi
            echo "Using APP_PORT=${APP_PORT:-not-set}"

            $DC -f docker-compose.prod.yml pull
            $DC -f docker-compose.prod.yml up -d
            docker image prune -f

      - name: Verify container health
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cname="bun-hono-server-prod"
            for i in $(seq 1 10); do
              status=$(docker inspect -f '{{ .State.Health.Status }}' "$cname" 2>/dev/null || echo "starting")
              echo "[$i] Health: $status"
              if [ "$status" = "healthy" ]; then
                exit 0
              fi
              sleep 6
            done
            echo "Container not healthy in time" >&2
            docker ps
            exit 1
