version: '3.8'

services:
  # 应用服务 (主服务)
  app:
    build: .
    container_name: bun-hono-server
    ports:
      - "3000:3000"
    env_file:
      - .env  # 本地开发环境配置文件
    environment:
      # 可选覆盖配置
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      # 数据持久化 (仅在使用 SQLite 时需要)
      - ./data:/app/data
      # 文件上传存储
      - ./uploads:/app/uploads
      # 日志文件
      - ./logs:/app/logs
    extra_hosts:
      # 允许容器访问宿主机服务 (用于连接宿主机的 Redis/MySQL)
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # 开发环境 Redis (可选，仅用于开发/测试)
  redis-dev:
    image: redis:7-alpine
    container_name: bun-hono-redis-dev
    ports:
      - "6380:6379"  # 使用不同端口避免冲突
    volumes:
      - redis-dev-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - dev  # 仅在 dev profile 下启动

volumes:
  redis-dev-data:
    driver: local

networks:
  app-network:
    driver: bridge